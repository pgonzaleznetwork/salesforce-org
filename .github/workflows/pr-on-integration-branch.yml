# Unique name for this workflow
name: Validate PR on integration branch

# Definition when the workflow should run
on:
    pull_request:
      types: [opened, synchronize]
      branches: [ integration ]
            

# Jobs to be executed
jobs:
    validate-deployment-on-integration-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:

            - name: 'Read PR Body'
              env:
                PAYLOAD: ${{github.event.pull_request.body}}
              run: |
                  echo $PAYLOAD > ./pr_body.txt
                  node node parsePR.js
                  TESTS=$(cat testsToRun.txt) 
                  echo $TESTS

            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            

            # Install java
            - name: 'Installing java'
              run: sudo apt-get install openjdk-8-jdk

            # Install SFDX scanner
            - name: 'Installing SFDX scanner'
              run: sfdx plugins:install @salesforce/sfdx-scanner

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0

            # Store secret for dev hub
            - name: 'Populate auth file with SFDX_URL secret of integration org'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

            # Authenticate to org
            - name: 'Authenticate to Integration Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/ 

            - name: 'Scan code'
              run: |
                  cd changed-sources
                  sfdx scanner:run --format csv --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.csv'  
                  cd ..

            - name: Upload code scan results
              uses: actions/upload-artifact@v2
              with:
                name: code-scan-report
                path: changed-sources/apexScanResults.csv

            - name: 'Check-only deploy delta changes'
              run: sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunLocalTests --json

            - name: 'Deploy destructive changes (if any)'
              run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings 

            

           

           